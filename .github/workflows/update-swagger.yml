name: Update Swagger Documentation

on:
  push:
    branches: [ main ]
    paths: 
      - 'src/**'
      - 'build.gradle'
  workflow_dispatch:
    inputs:
      server_url:
        description: 'OpenAPI JSON URL'
        required: false
        default: 'https://springboot.dev-leafresh.app/v3/api-docs'
        type: string

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "swagger-update"
  cancel-in-progress: false

jobs:
  update-swagger:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml requests
        
    - name: Update OpenAPI from server
      run: |
        SERVER_URL="${{ inputs.server_url || 'https://springboot.dev-leafresh.app/v3/api-docs' }}"
        echo "🔍 Updating OpenAPI spec from: $SERVER_URL"
        
        if python3 scripts/update-swagger-yaml.py "$SERVER_URL" swagger.yaml; then
          echo "✅ OpenAPI spec updated successfully"
        else
          echo "⚠️ Failed to fetch from server, keeping existing swagger.yaml"
          echo "This might be normal if the server is not running"
        fi
        
    - name: Commit updated swagger.yaml
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet swagger.yaml; then
          echo "📝 No changes in swagger.yaml"
        else
          echo "📝 Changes detected in swagger.yaml"
          git add swagger.yaml
          git commit -m "docs: Update OpenAPI specification [skip ci]"
          git push
          echo "✅ Updated swagger.yaml committed and pushed"
        fi
        
  deploy-swagger-ui:
    needs: update-swagger
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        ref: main  # 업데이트된 swagger.yaml을 가져오기 위해
        
    - name: Generate Swagger UI
      uses: Legion2/swagger-ui-action@v1
      with:
        output: swagger-ui
        spec-file: swagger.yaml
        
    - name: Setup GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: Upload Pages Artifact  
      uses: actions/upload-pages-artifact@v3
      with:
        path: './swagger-ui'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Deploy Complete
      run: |
        echo "🎉 Swagger UI deployment completed!"
        echo "📖 Documentation URL: ${{ steps.deployment.outputs.page_url }}"
